#!/usr/bin/env python
#
# Executes python-readability on current page and opens the summary as new tab.
#
# Depends on the python-readability package, or its fork:
#
#   - https://github.com/buriy/python-readability
#   - https://github.com/bookieio/breadability
#
# Usage:
#   :spawn --userscript readability
#
from __future__ import absolute_import
import codecs, os

tmpfile = os.path.join(
    os.environ.get('QUTE_DATA_DIR',
                   os.path.expanduser('~/.local/share/qutebrowser')),
    'userscripts/readability.html')

if not os.path.exists(os.path.dirname(tmpfile)):
    os.makedirs(os.path.dirname(tmpfile))

with codecs.open(os.environ['QUTE_HTML'], 'r', 'utf-8') as source:
    data = source.read()

    try:
        from breadability.readable import Article as reader
        doc = reader(data)
        content = doc.readable
    except ImportError:
        from readability import Document
        doc = Document(data)
        content = doc.summary().replace('<html>', '<html><head><title>%s</title></head>' % doc.title())

    content_type = '<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>'
    viewport = '<meta name="viewport" content="width=device-width, initial-scale=1">'
    style = '''<style type="text/css">
    body{margin:40px auto;max-width:650px;line-height:1.4;padding:0 10px}
    h1,h2,h3{line-height:1.2}</style>'''
    with codecs.open(tmpfile, 'w', 'utf-8') as target:
        target.write("{}{}{}".format(content_type, viewport, style))
        target.write(content)

    with open(os.environ['QUTE_FIFO'], 'w') as fifo:
        fifo.write('open -t %s' % tmpfile)
